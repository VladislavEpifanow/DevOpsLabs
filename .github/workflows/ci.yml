name: CI Pipeline

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  frontend-build:
    name: Frontend Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Cache npm dependencies
      uses: actions/cache@v3
      with:
        path: |
          node_modules
          .npm
        key: frontend-${{ hashFiles('package-lock.json') }}

    - name: Setup Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

  frontend-test:
    name: Frontend Tests
    needs: frontend-build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Run tests
      run: npm test
      env:
        CI: true

  backend-build:
    name: Backend Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: |
          venv/
          .venv/
          __pycache__/
        key: backend-${{ hashFiles('requirements.txt') }}

    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

  backend-test:
    name: Backend Tests
    needs: backend-build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: Install test dependencies
      run: pip install pytest

    - name: Run tests
      run: pytest -v tests/
      env:
        APP_ENV: testing