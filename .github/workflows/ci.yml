name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client
    steps:
    - uses: actions/checkout@v4
    
    - name: Verify package-lock.json
      run: |
        if [ ! -f "package-lock.json" ]; then
          echo "##[error] package-lock.json not found!"
          exit 1
        fi

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Save build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: frontend-build
        path: client/dist

  build-backend:
    name: Build Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        cache: 'pip'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt

  test-frontend:
    name: Test Frontend
    needs: build-frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: client
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'

    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: frontend-build
        path: client/dist

    - name: Run tests
      run: npm test -- --watchAll=false --ci
      env:
        CI: true

  test-backend:
    name: Test Backend
    needs: build-backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install test dependencies
      run: pip install pytest

    - name: Run tests
      run: pytest -v tests/